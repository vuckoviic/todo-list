(()=>{"use strict";var e={d:(t,n)=>{for(var l in n)e.o(n,l)&&!e.o(t,l)&&Object.defineProperty(t,l,{enumerable:!0,get:n[l]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let t;function n(){o.style.backgroundColor="low"===t?"lightblue":"normal"==t?"rgb(51, 126, 245)":"red"}function l(e){t=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked?e.target.parentElement.style.backgroundColor="green":"low"===t?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Priority is LOW")):"normal"==t?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Priority is NORMAL")):(e.target.parentElement.style.backgroundColor="red",console.log("Priority is HIGH"))}e.d({},{q7:()=>s,r3:()=>d,$y:()=>m});const i=document.getElementById("content");let o;const d=document.getElementsByTagName("dialog")[0],r=document.getElementById("addItem"),a=document.getElementById("closeDialog"),c=document.getElementsByTagName("form")[0];r.addEventListener("click",(()=>{d.showModal(),c.reset()})),a.addEventListener("click",(()=>{d.close()}));class s{constructor(e,t,n,l){this.title=e,this.description=t,this.dueDate=n,this.priority=l}}let m=[];document.getElementById("createTodoItem").addEventListener("click",(function(e){const r=document.getElementById("title").value,a=document.getElementById("description").value,c=document.getElementById("dueDate").value;if(t=document.getElementById("priority").value,r.length<1)alert("Please Insert a Title.");else if(a.length<1)alert("Please Insert a Description.");else if(""===c)alert("Please Choose Your Due Date.");else{const e=new s(r,a,c,t);console.log(e),m.push(e),console.log(m),function(){o=document.createElement("div");const e=document.createElement("input");e.type="checkbox",e.classList.add("checkbox");const d=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div");d.innerHTML="<h3>"+m[m.length-1].title+"</h3>",r.innerHTML="<p>"+m[m.length-1].description+"</p>",a.innerHTML="<p>"+m[m.length-1].dueDate+"</p>",n(),o.setAttribute("data-priority",t),o.setAttribute("data-index",m.length-1),o.appendChild(e),o.appendChild(d),o.appendChild(r),o.appendChild(a),o.classList.add("showItemDiv"),r.classList.add("showDescription"),i.appendChild(o),e.addEventListener("click",l),o.addEventListener("click",(e=>{e.target==o?function(e){const l=document.createElement("input"),o=document.createElement("textarea"),d=document.createElement("input"),r=document.createElement("select"),a=document.createElement("option"),c=document.createElement("option"),s=document.createElement("option");a.innerText="Low",c.innerText="Normal",s.innerText="High",a.setAttribute("value","low"),c.setAttribute("value","normal"),s.setAttribute("value","high");const u=e.children,p=u.item(1).firstChild.innerText,h=u.item(2).firstChild.innerText,v=u.item(3).firstChild.innerText,g=e.getAttribute("data-priority");l.value=p,o.innerText=h,d.value=v,r.innerText=g,r.appendChild(a),r.appendChild(c),r.appendChild(s),"low"==g?a.selected=!0:"normal"==g?c.selected=!0:s.selected=!0,d.type="date",e.appendChild(l),e.appendChild(o),e.appendChild(d),e.appendChild(r),e.removeChild(u.item(1)),e.removeChild(u.item(1)),e.removeChild(u.item(1));const C=document.createElement("button"),E=document.createElement("button"),y=document.createElement("button");C.classList.add("editButton","saveEditButton"),E.classList.add("editButton","closeEditButton"),y.classList.add("editButton","deleteEditButton"),C.innerText="Save",E.innerText="Close",y.innerText="Delete",e.appendChild(y),e.appendChild(E),e.appendChild(C),y.addEventListener("click",(()=>{i.removeChild(e)})),E.addEventListener("click",(()=>{const t=document.createElement("h3"),n=document.createElement("p"),i=document.createElement("p");e.setAttribute("data-priority",g),t.innerText=p,n.innerText=h,n.style.fontStyle="italic",i.innerText=v,e.appendChild(t),e.appendChild(n),e.appendChild(i),e.removeChild(l),e.removeChild(o),e.removeChild(d),e.removeChild(r),e.removeChild(C),e.removeChild(E),e.removeChild(y)})),C.addEventListener("click",(()=>{const i=document.createElement("h3"),a=document.createElement("p"),c=document.createElement("p");e.setAttribute("data-priority",r),i.innerText=l.value,a.innerText=o.value,a.style.fontStyle="italic",c.innerText=d.value;const s=e.getAttribute("data-index");m[s].title=l.value,m[s].description=o.value,m[s].dueDate=d.value,m[s].priority=r.value,t=r.value,n(),console.log(m[s]),console.log("Saved item's priority is: "+m[s].priority),e.appendChild(i),e.appendChild(a),e.appendChild(c),e.removeChild(l),e.removeChild(o),e.removeChild(d),e.removeChild(r),e.removeChild(C),e.removeChild(E),e.removeChild(y)}))}(e.target):console.log("Error! Clicked element can't be processed")}),{once:!0})}(),d.close()}e.preventDefault()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,