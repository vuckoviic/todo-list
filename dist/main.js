(()=>{"use strict";var e={d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let t;function n(){d.style.backgroundColor="low"===t?"lightblue":"normal"==t?"rgb(51, 126, 245)":"red"}function i(e){t=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked?(e.target.parentElement.style.backgroundColor="green",console.log("Div is checked"),e.target.parentElement.setAttribute("data-checked","true")):"low"===t?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):"normal"==t?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):(e.target.parentElement.style.backgroundColor="red",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false"))}e.d({},{q7:()=>s,r3:()=>o,$y:()=>m});const l=document.getElementById("content");let d;const o=document.getElementsByTagName("dialog")[0],a=document.getElementById("addItem"),r=document.getElementById("closeDialog"),c=document.getElementsByTagName("form")[0];a.addEventListener("click",(()=>{o.showModal(),c.reset()})),r.addEventListener("click",(()=>{o.close()}));class s{constructor(e,t,n,i){this.title=e,this.description=t,this.dueDate=n,this.priority=i}}let m=[];document.getElementById("createTodoItem").addEventListener("click",(function(e){const a=document.getElementById("title").value,r=document.getElementById("description").value,c=document.getElementById("dueDate").value;if(t=document.getElementById("priority").value,a.length<1)alert("Please Insert a Title.");else if(r.length<1)alert("Please Insert a Description.");else if(""===c)alert("Please Choose Your Due Date.");else{const e=new s(a,r,c,t);console.log(e),m.push(e),console.log(m),function(){d=document.createElement("div");const e=document.createElement("input");e.type="checkbox",e.classList.add("checkbox");const o=document.createElement("div"),a=document.createElement("div"),r=document.createElement("div");o.innerHTML="<h3>"+m[m.length-1].title+"</h3>",a.innerHTML="<p>"+m[m.length-1].description+"</p>",r.innerHTML="<p>"+m[m.length-1].dueDate+"</p>",n(),d.setAttribute("data-priority",t),d.setAttribute("data-index",m.length-1),d.setAttribute("data-checked","false"),d.setAttribute("data-editing","false"),d.appendChild(e),d.appendChild(o),d.appendChild(a),d.appendChild(r),d.classList.add("showItemDiv"),a.classList.add("showDescription"),l.appendChild(d),e.addEventListener("click",i),d.addEventListener("click",(e=>{e.target==d&&"false"==d.getAttribute("data-checked")&&"false"==d.getAttribute("data-editing")&&function(e){e.setAttribute("data-editing","true"),console.log("Div IS being edited right now");const i=document.createElement("input"),d=document.createElement("textarea"),o=document.createElement("input"),a=document.createElement("select"),r=document.createElement("option"),c=document.createElement("option"),s=document.createElement("option");r.innerText="Low",c.innerText="Normal",s.innerText="High",r.setAttribute("value","low"),c.setAttribute("value","normal"),s.setAttribute("value","high");const u=e.children,p=u.item(1).innerText,h=u.item(2).innerText,g=u.item(3).innerText,v=e.getAttribute("data-priority");i.value=p,d.innerText=h,o.value=g,a.innerText=v,a.appendChild(r),a.appendChild(c),a.appendChild(s),"low"==v?r.selected=!0:"normal"==v?c.selected=!0:"high"==v&&(s.selected=!0),o.type="date",e.appendChild(i),e.appendChild(d),e.appendChild(o),e.appendChild(a),e.removeChild(u.item(1)),e.removeChild(u.item(1)),e.removeChild(u.item(1));const E=document.createElement("button"),C=document.createElement("button"),b=document.createElement("button");E.classList.add("editButton","saveEditButton"),C.classList.add("editButton","closeEditButton"),b.classList.add("editButton","deleteEditButton"),E.innerText="Save",C.innerText="Close",b.innerText="Delete",e.appendChild(b),e.appendChild(C),e.appendChild(E),b.addEventListener("click",(()=>{l.removeChild(e),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),C.addEventListener("click",(()=>{const t=document.createElement("h3"),n=document.createElement("p"),l=document.createElement("p");e.setAttribute("data-priority",v),t.innerText=p,n.innerText=h,n.style.fontStyle="italic",l.innerText=g,e.appendChild(t),e.appendChild(n),e.appendChild(l),e.removeChild(i),e.removeChild(d),e.removeChild(o),e.removeChild(a),e.removeChild(E),e.removeChild(C),e.removeChild(b),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),E.addEventListener("click",(()=>{const l=document.createElement("h3"),r=document.createElement("p"),c=document.createElement("p");l.innerText=i.value,r.innerText=d.value,r.style.fontStyle="italic",c.innerText=o.value;const s=e.getAttribute("data-index");m[s].title=i.value,m[s].description=d.value,m[s].dueDate=o.value,m[s].priority=a.value,t=a.value,n(),e.setAttribute("data-priority",a.value),console.log(m[s]),console.log("Saved item's priority is: "+m[s].priority),e.appendChild(l),e.appendChild(r),e.appendChild(c),e.removeChild(i),e.removeChild(d),e.removeChild(o),e.removeChild(a),e.removeChild(E),e.removeChild(C),e.removeChild(b),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")}))}(e.target)}))}(),o.close()}e.preventDefault()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,