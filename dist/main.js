(()=>{"use strict";var e={d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(){document.getElementById("content").innerHTML=""}e.d({},{q7:()=>b,r3:()=>g,ar:()=>C,dt:()=>k});const n=document.getElementById("inbox");let i=[],d=[];d.push(n);let l,a,o=[];function r(e){e.style.backgroundColor="low"===a?"lightblue":"normal"==a?"rgb(51, 126, 245)":"red"}function c(e){if(a=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked){e.target.parentElement.style.backgroundColor="green",console.log("Div is checked"),e.target.parentElement.setAttribute("data-checked","true");let t=e.target.parentElement.getAttribute("data-index");l[t].checked=!0,console.log(l[t].checked)}else{"low"===a?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):"normal"==a?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):(e.target.parentElement.style.backgroundColor="red",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false"));let t=e.target.parentElement.getAttribute("data-index");l[t].checked=!1,console.log(l[t].checked)}}function s(e){e.setAttribute("data-editing","true"),console.log("Div IS being edited right now");const t=document.createElement("input"),n=document.createElement("textarea"),i=document.createElement("input"),d=document.createElement("select"),o=document.createElement("option"),c=document.createElement("option"),s=document.createElement("option");o.innerText="Low",c.innerText="Normal",s.innerText="High",o.setAttribute("value","low"),c.setAttribute("value","normal"),s.setAttribute("value","high");const u=e.children,p=u.item(0),h=u.item(1).innerText,g=u.item(2).innerText,v=u.item(3).innerText,E=e.getAttribute("data-priority");p.disabled=!0,t.value=h,n.innerText=g,i.value=v,d.innerText=E,d.appendChild(o),d.appendChild(c),d.appendChild(s),"low"==E?o.selected=!0:"normal"==E?c.selected=!0:"high"==E&&(s.selected=!0),i.type="date",e.appendChild(t),e.appendChild(n),e.appendChild(i),e.appendChild(d),e.removeChild(u.item(1)),e.removeChild(u.item(1)),e.removeChild(u.item(1));const y=document.createElement("button"),b=document.createElement("button"),C=document.createElement("button");y.classList.add("editButton","saveEditButton"),b.classList.add("editButton","closeEditButton"),C.classList.add("editButton","deleteEditButton"),y.innerText="Save",b.innerText="Close",C.innerText="Delete",e.appendChild(C),e.appendChild(b),e.appendChild(y),C.addEventListener("click",(()=>{m.removeChild(e);const t=parseInt(e.getAttribute("data-index"));l.pop(l[t]),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),b.addEventListener("click",(()=>{const l=document.createElement("h3"),a=document.createElement("p"),o=document.createElement("p");e.setAttribute("data-priority",E),l.innerText=h,a.innerText=g,a.style.fontStyle="italic",o.innerText=v,e.appendChild(l),e.appendChild(a),e.appendChild(o),e.removeChild(t),e.removeChild(n),e.removeChild(i),e.removeChild(d),e.removeChild(y),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),y.addEventListener("click",(()=>{const o=document.createElement("h3"),c=document.createElement("p"),s=document.createElement("p");o.innerText=t.value,c.innerText=n.value,c.style.fontStyle="italic",s.innerText=i.value;const m=parseInt(e.getAttribute("data-index"));l[m].title=t.value,l[m].description=n.value,l[m].dueDate=i.value,l[m].priority=d.value,a=d.value,r(e),e.setAttribute("data-priority",d.value),console.log(l[m]),console.log("Saved item's priority is: "+l[m].priority),e.appendChild(o),e.appendChild(c),e.appendChild(s),e.removeChild(t),e.removeChild(n),e.removeChild(i),e.removeChild(d),e.removeChild(y),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")}))}o.push(i),l=i,n.classList.add("active-project"),n.addEventListener("click",(()=>{t();for(let e=0;e<d.length;e++)d[e].classList.remove("active-project"),d[e].displayed=!1,p=0;n.classList.add("active-project");for(let e=0;e<d.length;e++)d[e].classList.contains("active-project")&&(l=o[e]);h(l)}));const m=document.getElementById("content");let u,p=0;function h(e){for(let t=p;t<e.length;t++){u=document.createElement("div");const n=document.createElement("input");n.type="checkbox",n.classList.add("checkbox");const i=document.createElement("div"),d=document.createElement("div"),l=document.createElement("div");i.innerHTML="<h3>"+e[t].title+"</h3>",d.innerHTML="<p>"+e[t].description+"</p>",l.innerHTML="<p>"+e[t].dueDate+"</p>",a=e[t].priority,r(u),u.setAttribute("data-priority",a),u.setAttribute("data-index",t),u.setAttribute("data-checked","false"),u.setAttribute("data-editing","false"),1==e[t].checked?(n.checked=!0,u.setAttribute("data-checked","true"),u.style.backgroundColor="green"):(n.checked=!1,u.setAttribute("data-checked","false")),u.appendChild(n),u.appendChild(i),u.appendChild(d),u.appendChild(l),u.classList.add("showItemDiv"),d.classList.add("showDescription"),m.appendChild(u),n.addEventListener("click",c),u.addEventListener("click",(e=>{e.target==u&&"false"==u.getAttribute("data-checked")&&"false"==u.getAttribute("data-editing")&&s(e.target)})),e[t].displayed=!0,p++}}const g=document.getElementsByTagName("dialog")[0],v=document.getElementById("addItem"),E=document.getElementById("closeDialog"),y=document.getElementsByTagName("form")[0];v.addEventListener("click",(()=>{g.showModal(),y.reset()})),E.addEventListener("click",(()=>{g.close()}));class b{constructor(e,t,n,i){this.title=e,this.description=t,this.dueDate=n,this.priority=i}}document.getElementById("createTodoItem").addEventListener("click",(()=>{!function(e){const t=document.getElementById("title").value,n=document.getElementById("description").value,i=document.getElementById("dueDate").value;if(a=document.getElementById("priority").value,t.length<1)alert("Please Insert a Title.");else if(n.length<1)alert("Please Insert a Description.");else if(""===i)alert("Please Choose Your Due Date.");else{const d=new b(t,n,i,a);console.log(d),console.log(e),e.push(d),h(e),g.close()}}(l)}));const C=document.getElementById("newProject"),k=document.getElementById("projects");C.addEventListener("click",(function(){const e=document.createElement("button"),n=document.createElement("input"),i=document.createElement("button"),a=document.createElement("button");i.innerText="Save",a.innerText="Exit",e.style.padding="3px",i.style.backgroundColor="white",i.style.maxHeight="15px",i.style.maxWidth="15px",i.style.fontSize="1em",i.style.color="navy",i.style.marginTop="5px",a.style.backgroundColor="white",a.style.maxHeight="15px",a.style.maxWidth="15px",a.style.fontSize="1em",a.style.color="navy",a.style.marginTop="5px",e.appendChild(n),e.appendChild(a),e.appendChild(i),i.addEventListener("click",(()=>{let i=n.value;i.length<1?alert("Please Insert Name For Your Project."):(e.innerText=i,i=new Array,o.push(i),e.addEventListener("click",(()=>{t();for(let e=0;e<d.length;e++)d[e].classList.remove("active-project"),d[e].displayed=!1,p=0;e.classList.add("active-project");for(let e=0;e<d.length;e++)d[e].classList.contains("active-project")&&(l=o[e]);h(l)})))})),a.addEventListener("click",(()=>{k.removeChild(e)})),k.removeChild(C),k.appendChild(e),k.appendChild(C),d.push(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,