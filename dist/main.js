(()=>{"use strict";var e={d:(t,n)=>{for(var l in n)e.o(n,l)&&!e.o(t,l)&&Object.defineProperty(t,l,{enumerable:!0,get:n[l]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(){document.getElementById("content").innerHTML=""}e.d({},{q7:()=>C,B5:()=>y,r3:()=>v,ar:()=>k,dt:()=>x});const n=document.getElementById("inbox");let l=[],i=[];i.push(n);let d,o,a=[];function r(e){e.style.backgroundColor="low"===o?"lightblue":"normal"==o?"rgb(51, 126, 245)":"red"}function c(e){if(o=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked){e.target.parentElement.style.backgroundColor="green",console.log("Div is checked"),e.target.parentElement.setAttribute("data-checked","true");let t=e.target.parentElement.getAttribute("data-index");d[t].checked=!0,console.log(d[t].checked)}else{"low"===o?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):"normal"==o?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):(e.target.parentElement.style.backgroundColor="red",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false"));let t=e.target.parentElement.getAttribute("data-index");d[t].checked=!1,console.log(d[t].checked)}}function s(e){e.setAttribute("data-editing","true"),console.log("Div IS being edited right now");const t=document.createElement("input"),n=document.createElement("textarea"),l=document.createElement("input"),i=document.createElement("select"),a=document.createElement("option"),c=document.createElement("option"),s=document.createElement("option");a.innerText="Low",c.innerText="Normal",s.innerText="High",a.setAttribute("value","low"),c.setAttribute("value","normal"),s.setAttribute("value","high");const u=e.children,p=u.item(0),h=u.item(1).innerText,g=u.item(2).innerText,v=u.item(3).innerText,y=e.getAttribute("data-priority");p.disabled=!0,t.value=h,n.innerText=g,l.value=v,i.innerText=y,i.appendChild(a),i.appendChild(c),i.appendChild(s),"low"==y?a.selected=!0:"normal"==y?c.selected=!0:"high"==y&&(s.selected=!0),l.type="date",e.appendChild(t),e.appendChild(n),e.appendChild(l),e.appendChild(i),e.removeChild(u.item(1)),e.removeChild(u.item(1)),e.removeChild(u.item(1));const E=document.createElement("button"),b=document.createElement("button"),C=document.createElement("button");E.classList.add("editButton","saveEditButton"),b.classList.add("editButton","closeEditButton"),C.classList.add("editButton","deleteEditButton"),E.innerText="Save",b.innerText="Close",C.innerText="Delete",e.appendChild(C),e.appendChild(b),e.appendChild(E),C.addEventListener("click",(()=>{m.removeChild(e);const t=parseInt(e.getAttribute("data-index"));d.pop(d[t]),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),b.addEventListener("click",(()=>{const d=document.createElement("h3"),o=document.createElement("p"),a=document.createElement("p");e.setAttribute("data-priority",y),d.innerText=h,o.innerText=g,o.style.fontStyle="italic",a.innerText=v,e.appendChild(d),e.appendChild(o),e.appendChild(a),e.removeChild(t),e.removeChild(n),e.removeChild(l),e.removeChild(i),e.removeChild(E),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),E.addEventListener("click",(()=>{const a=document.createElement("h3"),c=document.createElement("p"),s=document.createElement("p");a.innerText=t.value,c.innerText=n.value,c.style.fontStyle="italic",s.innerText=l.value;const m=parseInt(e.getAttribute("data-index"));d[m].title=t.value,d[m].description=n.value,d[m].dueDate=l.value,d[m].priority=i.value,o=i.value,r(e),e.setAttribute("data-priority",i.value),console.log(d[m]),console.log("Saved item's priority is: "+d[m].priority),e.appendChild(a),e.appendChild(c),e.appendChild(s),e.removeChild(t),e.removeChild(n),e.removeChild(l),e.removeChild(i),e.removeChild(E),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")}))}a.push(l),d=l,n.classList.add("active-project"),n.addEventListener("click",(()=>{t(),y.disabled=!0,y.style.backgroundColor="grey";for(let e=0;e<i.length;e++)i[e].classList.remove("active-project"),i[e].displayed=!1,h=0;n.classList.add("active-project");for(let e=0;e<i.length;e++)i[e].classList.contains("active-project")&&(d=a[e]);for(let e=0;e<l.length;e++){for(let t=0;t<l[e].length;t++)l[e][t].displayed=!1,console.log(l[e][t]);console.log("displayedItems: "+h),h=0,g(l[e])}}));const m=document.getElementById("content");let u;const p=document.getElementById("inbox");let h=0;function g(e){for(let t=h;t<e.length;t++){u=document.createElement("div");const n=document.createElement("input");n.type="checkbox",n.classList.add("checkbox");const l=document.createElement("div"),i=document.createElement("div"),d=document.createElement("div");l.innerHTML="<h3>"+e[t].title+"</h3>",i.innerHTML="<p>"+e[t].description+"</p>",d.innerHTML="<p>"+e[t].dueDate+"</p>",o=e[t].priority,r(u),u.setAttribute("data-priority",o),u.setAttribute("data-index",t),u.setAttribute("data-checked","false"),u.setAttribute("data-editing","false"),1==e[t].checked?(n.checked=!0,u.setAttribute("data-checked","true"),u.style.backgroundColor="green"):(n.checked=!1,u.setAttribute("data-checked","false")),u.appendChild(n),u.appendChild(l),u.appendChild(i),u.appendChild(d),u.classList.add("showItemDiv"),i.classList.add("showDescription"),m.appendChild(u),n.addEventListener("click",c),u.addEventListener("click",(e=>{e.target==u&&"false"==u.getAttribute("data-checked")&&"false"==u.getAttribute("data-editing")&&0==p.classList.contains("active-project")&&s(e.target)})),e[t].displayed=!0,h++}}const v=document.getElementsByTagName("dialog")[0],y=document.getElementById("addItem");y.disabled=!0,1==y.disabled?y.style.backgroundColor="grey":y.style.backgroundColor="navy";const E=document.getElementById("closeDialog"),b=document.getElementsByTagName("form")[0];y.addEventListener("click",(()=>{v.showModal(),b.reset()})),E.addEventListener("click",(()=>{v.close()}));class C{constructor(e,t,n,l){this.title=e,this.description=t,this.dueDate=n,this.priority=l}}document.getElementById("createTodoItem").addEventListener("click",(()=>{!function(e){const t=document.getElementById("title").value,n=document.getElementById("description").value,l=document.getElementById("dueDate").value;if(o=document.getElementById("priority").value,t.length<1)alert("Please Insert a Title.");else if(n.length<1)alert("Please Insert a Description.");else if(""===l)alert("Please Choose Your Due Date.");else{const i=new C(t,n,l,o);console.log(i),console.log(e),e.push(i),g(e),v.close()}}(d)}));const k=document.getElementById("newProject"),x=document.getElementById("projects");k.addEventListener("click",(function(){const e=document.createElement("button"),n=document.createElement("input"),o=document.createElement("button"),r=document.createElement("button");o.innerText="Save",r.innerText="Exit",e.style.padding="3px",o.style.backgroundColor="white",o.style.maxHeight="15px",o.style.maxWidth="15px",o.style.fontSize="1em",o.style.color="navy",o.style.marginTop="5px",r.style.backgroundColor="white",r.style.maxHeight="15px",r.style.maxWidth="15px",r.style.fontSize="1em",r.style.color="navy",r.style.marginTop="5px",e.appendChild(n),e.appendChild(r),e.appendChild(o),o.addEventListener("click",(()=>{let o=n.value;o.length<1?alert("Please Insert Name For Your Project."):(e.innerText=o,o=new Array,a.push(o),l.push(o),e.addEventListener("click",(()=>{t(),y.disabled=!1,y.style.backgroundColor="navy";for(let e=0;e<i.length;e++)i[e].classList.remove("active-project"),i[e].displayed=!1,h=0;e.classList.add("active-project");for(let e=0;e<i.length;e++)i[e].classList.contains("active-project")&&(d=a[e]);g(d)})))})),r.addEventListener("click",(()=>{x.removeChild(e)})),x.removeChild(k),x.appendChild(e),x.appendChild(k),i.push(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,