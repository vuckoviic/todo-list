(()=>{"use strict";var e={d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}};e.d({},{q7:()=>y,r3:()=>p,ar:()=>E,dt:()=>b});var t={};function n(){document.getElementById("content").innerHTML=""}e.r(t),e.d(t,{q7:()=>y,r3:()=>p,ar:()=>E,dt:()=>b});const i=document.getElementById("inbox");let l=[],a=[];a.push(i);let d,r,o=[];function c(){u.style.backgroundColor="low"===r?"lightblue":"normal"==r?"rgb(51, 126, 245)":"red"}function s(e){r=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked?(e.target.parentElement.style.backgroundColor="green",console.log("Div is checked"),e.target.parentElement.setAttribute("data-checked","true")):"low"===r?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):"normal"==r?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):(e.target.parentElement.style.backgroundColor="red",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false"))}o.push(l),i.classList.add("active-project"),i.addEventListener("click",(()=>{n();for(let e=0;e<a.length;e++)a[e].classList.remove("active-project");l.push("JA SAM POPIO"),i.classList.add("active-project");for(let e=0;e<a.length;e++)a[e].classList.contains("active-project")&&(d=o[e],console.log("Active array is: "+d.length))}));const m=document.getElementById("content");let u;const p=document.getElementsByTagName("dialog")[0],h=document.getElementById("addItem"),g=document.getElementById("closeDialog"),v=document.getElementsByTagName("form")[0];h.addEventListener("click",(()=>{p.showModal(),v.reset()})),g.addEventListener("click",(()=>{p.close()}));class y{constructor(e,t,n,i){this.title=e,this.description=t,this.dueDate=n,this.priority=i}}document.getElementById("createTodoItem").addEventListener("click",(()=>{!function(e,n){const i=document.getElementById("title").value,l=document.getElementById("description").value,a=document.getElementById("dueDate").value;if(r=document.getElementById("priority").value,i.length<1)alert("Please Insert a Title.");else if(l.length<1)alert("Please Insert a Description.");else if(""===a)alert("Please Choose Your Due Date.");else{const e=new y(i,l,a,r);console.log(e),console.log(n),n.push(e),console.log(n),function(){u=document.createElement("div");const e=document.createElement("input");e.type="checkbox",e.classList.add("checkbox");const n=document.createElement("div"),i=document.createElement("div"),l=document.createElement("div");n.innerHTML="<h3>"+t.activeArray[t.activeArray.length-1].title+"</h3>",i.innerHTML="<p>"+t.activeArray[t.activeArray.length-1].description+"</p>",l.innerHTML="<p>"+t.activeArray[t.activeArray.length-1].dueDate+"</p>",c(),u.setAttribute("data-priority",r),u.setAttribute("data-index",t.activeArray.length-1),u.setAttribute("data-checked","false"),u.setAttribute("data-editing","false"),u.appendChild(e),u.appendChild(n),u.appendChild(i),u.appendChild(l),u.classList.add("showItemDiv"),i.classList.add("showDescription"),m.appendChild(u),e.addEventListener("click",s),u.addEventListener("click",(e=>{e.target==u&&"false"==u.getAttribute("data-checked")&&"false"==u.getAttribute("data-editing")&&function(e){e.setAttribute("data-editing","true"),console.log("Div IS being edited right now");const n=document.createElement("input"),i=document.createElement("textarea"),l=document.createElement("input"),a=document.createElement("select"),d=document.createElement("option"),o=document.createElement("option"),s=document.createElement("option");d.innerText="Low",o.innerText="Normal",s.innerText="High",d.setAttribute("value","low"),o.setAttribute("value","normal"),s.setAttribute("value","high");const u=e.children,p=u.item(0),h=u.item(1).innerText,g=u.item(2).innerText,v=u.item(3).innerText,y=e.getAttribute("data-priority");p.disabled=!0,n.value=h,i.innerText=g,l.value=v,a.innerText=y,a.appendChild(d),a.appendChild(o),a.appendChild(s),"low"==y?d.selected=!0:"normal"==y?o.selected=!0:"high"==y&&(s.selected=!0),l.type="date",e.appendChild(n),e.appendChild(i),e.appendChild(l),e.appendChild(a),e.removeChild(u.item(1)),e.removeChild(u.item(1)),e.removeChild(u.item(1));const E=document.createElement("button"),b=document.createElement("button"),C=document.createElement("button");E.classList.add("editButton","saveEditButton"),b.classList.add("editButton","closeEditButton"),C.classList.add("editButton","deleteEditButton"),E.innerText="Save",b.innerText="Close",C.innerText="Delete",e.appendChild(C),e.appendChild(b),e.appendChild(E),C.addEventListener("click",(()=>{m.removeChild(e),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),b.addEventListener("click",(()=>{const t=document.createElement("h3"),d=document.createElement("p"),r=document.createElement("p");e.setAttribute("data-priority",y),t.innerText=h,d.innerText=g,d.style.fontStyle="italic",r.innerText=v,e.appendChild(t),e.appendChild(d),e.appendChild(r),e.removeChild(n),e.removeChild(i),e.removeChild(l),e.removeChild(a),e.removeChild(E),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),E.addEventListener("click",(()=>{const d=document.createElement("h3"),o=document.createElement("p"),s=document.createElement("p");d.innerText=n.value,o.innerText=i.value,o.style.fontStyle="italic",s.innerText=l.value;const m=e.getAttribute("data-index");t.activeArray[m].title=n.value,t.activeArray[m].description=i.value,t.activeArray[m].dueDate=l.value,t.activeArray[m].priority=a.value,r=a.value,c(),e.setAttribute("data-priority",a.value),console.log(t.activeArray[m]),console.log("Saved item's priority is: "+t.activeArray[m].priority),e.appendChild(d),e.appendChild(o),e.appendChild(s),e.removeChild(n),e.removeChild(i),e.removeChild(l),e.removeChild(a),e.removeChild(E),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")}))}(e.target)}))}(),p.close()}}()}));const E=document.getElementById("newProject"),b=document.getElementById("projects");E.addEventListener("click",(function(){const e=document.createElement("button"),t=document.createElement("input"),i=document.createElement("button"),l=document.createElement("button");i.innerText="Save",l.innerText="Exit",e.style.padding="3px",i.style.backgroundColor="white",i.style.maxHeight="15px",i.style.maxWidth="15px",i.style.fontSize="1em",i.style.color="navy",i.style.marginTop="5px",l.style.backgroundColor="white",l.style.maxHeight="15px",l.style.maxWidth="15px",l.style.fontSize="1em",l.style.color="navy",l.style.marginTop="5px",e.appendChild(t),e.appendChild(l),e.appendChild(i),i.addEventListener("click",(()=>{let i=t.value;i.length<1?alert("Please Insert Name For Your Project."):(e.innerText=i,i=new Array,o.push(i),e.addEventListener("click",(()=>{n();for(let e=0;e<a.length;e++)a[e].classList.remove("active-project");e.classList.add("active-project");for(let e=0;e<a.length;e++)a[e].classList.contains("active-project")&&(d=o[e],console.log("Active array is: "+d.length))})))})),l.addEventListener("click",(()=>{b.removeChild(e)})),b.removeChild(E),b.appendChild(e),b.appendChild(E),a.push(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,