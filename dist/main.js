(()=>{"use strict";var e={d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}};e.d({},{q7:()=>b,r3:()=>g,ar:()=>C,dt:()=>x});var t={};function n(){document.getElementById("content").innerHTML=""}e.r(t),e.d(t,{q7:()=>b,r3:()=>g,ar:()=>C,dt:()=>x});const i=document.getElementById("inbox");let l=[],d=[];d.push(i);let a,o,r=[];function c(){p.style.backgroundColor="low"===o?"lightblue":"normal"==o?"rgb(51, 126, 245)":"red"}function s(e){o=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked?(e.target.parentElement.style.backgroundColor="green",console.log("Div is checked"),e.target.parentElement.setAttribute("data-checked","true")):"low"===o?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):"normal"==o?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):(e.target.parentElement.style.backgroundColor="red",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false"))}function m(e){e.setAttribute("data-editing","true"),console.log("Div IS being edited right now");const n=document.createElement("input"),i=document.createElement("textarea"),l=document.createElement("input"),d=document.createElement("select"),a=document.createElement("option"),r=document.createElement("option"),s=document.createElement("option");a.innerText="Low",r.innerText="Normal",s.innerText="High",a.setAttribute("value","low"),r.setAttribute("value","normal"),s.setAttribute("value","high");const m=e.children,p=m.item(0),h=m.item(1).innerText,g=m.item(2).innerText,v=m.item(3).innerText,y=e.getAttribute("data-priority");p.disabled=!0,n.value=h,i.innerText=g,l.value=v,d.innerText=y,d.appendChild(a),d.appendChild(r),d.appendChild(s),"low"==y?a.selected=!0:"normal"==y?r.selected=!0:"high"==y&&(s.selected=!0),l.type="date",e.appendChild(n),e.appendChild(i),e.appendChild(l),e.appendChild(d),e.removeChild(m.item(1)),e.removeChild(m.item(1)),e.removeChild(m.item(1));const E=document.createElement("button"),b=document.createElement("button"),C=document.createElement("button");E.classList.add("editButton","saveEditButton"),b.classList.add("editButton","closeEditButton"),C.classList.add("editButton","deleteEditButton"),E.innerText="Save",b.innerText="Close",C.innerText="Delete",e.appendChild(C),e.appendChild(b),e.appendChild(E),C.addEventListener("click",(()=>{u.removeChild(e),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),b.addEventListener("click",(()=>{const t=document.createElement("h3"),a=document.createElement("p"),o=document.createElement("p");e.setAttribute("data-priority",y),t.innerText=h,a.innerText=g,a.style.fontStyle="italic",o.innerText=v,e.appendChild(t),e.appendChild(a),e.appendChild(o),e.removeChild(n),e.removeChild(i),e.removeChild(l),e.removeChild(d),e.removeChild(E),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),E.addEventListener("click",(()=>{const a=document.createElement("h3"),r=document.createElement("p"),s=document.createElement("p");a.innerText=n.value,r.innerText=i.value,r.style.fontStyle="italic",s.innerText=l.value;const m=e.getAttribute("data-index");t.activeArray[m].title=n.value,t.activeArray[m].description=i.value,t.activeArray[m].dueDate=l.value,t.activeArray[m].priority=d.value,o=d.value,c(),e.setAttribute("data-priority",d.value),console.log(t.activeArray[m]),console.log("Saved item's priority is: "+t.activeArray[m].priority),e.appendChild(a),e.appendChild(r),e.appendChild(s),e.removeChild(n),e.removeChild(i),e.removeChild(l),e.removeChild(d),e.removeChild(E),e.removeChild(b),e.removeChild(C),p.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")}))}r.push(l),a=l,i.classList.add("active-project"),i.addEventListener("click",(()=>{n();for(let e=0;e<d.length;e++)d[e].classList.remove("active-project");i.classList.add("active-project");for(let e=0;e<d.length;e++)d[e].classList.contains("active-project")&&(a=r[e]);h(a)}));const u=document.getElementById("content");let p;function h(e){for(let t=0;t<e.length;t++){p=document.createElement("div");const n=document.createElement("input");n.type="checkbox",n.classList.add("checkbox");const i=document.createElement("div"),l=document.createElement("div"),d=document.createElement("div");i.innerHTML="<h3>"+e[t].title+"</h3>",l.innerHTML="<p>"+e[t].description+"</p>",d.innerHTML="<p>"+e[t].dueDate+"</p>",c(),p.setAttribute("data-priority",o),p.setAttribute("data-index",e[t]),p.setAttribute("data-checked","false"),p.setAttribute("data-editing","false"),p.appendChild(n),p.appendChild(i),p.appendChild(l),p.appendChild(d),p.classList.add("showItemDiv"),l.classList.add("showDescription"),u.appendChild(p),n.addEventListener("click",s),p.addEventListener("click",(e=>{e.target==p&&"false"==p.getAttribute("data-checked")&&"false"==p.getAttribute("data-editing")&&m(e.target)}))}}const g=document.getElementsByTagName("dialog")[0],v=document.getElementById("addItem"),y=document.getElementById("closeDialog"),E=document.getElementsByTagName("form")[0];v.addEventListener("click",(()=>{g.showModal(),E.reset()})),y.addEventListener("click",(()=>{g.close()}));class b{constructor(e,t,n,i){this.title=e,this.description=t,this.dueDate=n,this.priority=i}}document.getElementById("createTodoItem").addEventListener("click",(()=>{!function(e){const t=document.getElementById("title").value,n=document.getElementById("description").value,i=document.getElementById("dueDate").value;if(o=document.getElementById("priority").value,t.length<1)alert("Please Insert a Title.");else if(n.length<1)alert("Please Insert a Description.");else if(""===i)alert("Please Choose Your Due Date.");else{const l=new b(t,n,i,o);console.log(l),console.log(e),e.push(l),h(e),g.close()}}(a)}));const C=document.getElementById("newProject"),x=document.getElementById("projects");C.addEventListener("click",(function(){const e=document.createElement("button"),t=document.createElement("input"),i=document.createElement("button"),l=document.createElement("button");i.innerText="Save",l.innerText="Exit",e.style.padding="3px",i.style.backgroundColor="white",i.style.maxHeight="15px",i.style.maxWidth="15px",i.style.fontSize="1em",i.style.color="navy",i.style.marginTop="5px",l.style.backgroundColor="white",l.style.maxHeight="15px",l.style.maxWidth="15px",l.style.fontSize="1em",l.style.color="navy",l.style.marginTop="5px",e.appendChild(t),e.appendChild(l),e.appendChild(i),i.addEventListener("click",(()=>{let i=t.value;i.length<1?alert("Please Insert Name For Your Project."):(e.innerText=i,i=new Array,r.push(i),e.addEventListener("click",(()=>{n();for(let e=0;e<d.length;e++)d[e].classList.remove("active-project");e.classList.add("active-project");for(let e=0;e<d.length;e++)d[e].classList.contains("active-project")&&(a=r[e]);h(a)})))})),l.addEventListener("click",(()=>{x.removeChild(e)})),x.removeChild(C),x.appendChild(e),x.appendChild(C),d.push(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,