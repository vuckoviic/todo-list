(()=>{"use strict";var e={d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let t;function n(){d.style.backgroundColor="low"===t?"lightblue":"normal"==t?"rgb(51, 126, 245)":"red"}function i(e){t=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked?(e.target.parentElement.style.backgroundColor="green",console.log("Div is checked"),e.target.parentElement.setAttribute("data-checked","true")):"low"===t?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):"normal"==t?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false")):(e.target.parentElement.style.backgroundColor="red",console.log("Div is not checked"),e.target.parentElement.setAttribute("data-checked","false"))}e.d({},{q7:()=>p,r3:()=>c,ar:()=>g,dt:()=>v,$y:()=>h});const l=document.getElementById("content");let d;function o(){document.getElementById("content").innerHTML=""}const a=document.getElementById("inbox");let r=[];r.push(a),a.classList.add("active-project"),a.addEventListener("click",(()=>{o();for(let e=0;e<r.length;e++)r[e].classList.remove("active-project");a.classList.add("active-project")}));const c=document.getElementsByTagName("dialog")[0],s=document.getElementById("addItem"),m=document.getElementById("closeDialog"),u=document.getElementsByTagName("form")[0];s.addEventListener("click",(()=>{c.showModal(),u.reset()})),m.addEventListener("click",(()=>{c.close()}));class p{constructor(e,t,n,i){this.title=e,this.description=t,this.dueDate=n,this.priority=i}}let h=[];document.getElementById("createTodoItem").addEventListener("click",(function(e){const o=document.getElementById("title").value,a=document.getElementById("description").value,r=document.getElementById("dueDate").value;if(t=document.getElementById("priority").value,o.length<1)alert("Please Insert a Title.");else if(a.length<1)alert("Please Insert a Description.");else if(""===r)alert("Please Choose Your Due Date.");else{const e=new p(o,a,r,t);console.log(e),h.push(e),console.log(h),function(){d=document.createElement("div");const e=document.createElement("input");e.type="checkbox",e.classList.add("checkbox");const o=document.createElement("div"),a=document.createElement("div"),r=document.createElement("div");o.innerHTML="<h3>"+h[h.length-1].title+"</h3>",a.innerHTML="<p>"+h[h.length-1].description+"</p>",r.innerHTML="<p>"+h[h.length-1].dueDate+"</p>",n(),d.setAttribute("data-priority",t),d.setAttribute("data-index",h.length-1),d.setAttribute("data-checked","false"),d.setAttribute("data-editing","false"),d.appendChild(e),d.appendChild(o),d.appendChild(a),d.appendChild(r),d.classList.add("showItemDiv"),a.classList.add("showDescription"),l.appendChild(d),e.addEventListener("click",i),d.addEventListener("click",(e=>{e.target==d&&"false"==d.getAttribute("data-checked")&&"false"==d.getAttribute("data-editing")&&function(e){e.setAttribute("data-editing","true"),console.log("Div IS being edited right now");const i=document.createElement("input"),d=document.createElement("textarea"),o=document.createElement("input"),a=document.createElement("select"),r=document.createElement("option"),c=document.createElement("option"),s=document.createElement("option");r.innerText="Low",c.innerText="Normal",s.innerText="High",r.setAttribute("value","low"),c.setAttribute("value","normal"),s.setAttribute("value","high");const m=e.children,u=m.item(0),p=m.item(1).innerText,g=m.item(2).innerText,v=m.item(3).innerText,E=e.getAttribute("data-priority");u.disabled=!0,i.value=p,d.innerText=g,o.value=v,a.innerText=E,a.appendChild(r),a.appendChild(c),a.appendChild(s),"low"==E?r.selected=!0:"normal"==E?c.selected=!0:"high"==E&&(s.selected=!0),o.type="date",e.appendChild(i),e.appendChild(d),e.appendChild(o),e.appendChild(a),e.removeChild(m.item(1)),e.removeChild(m.item(1)),e.removeChild(m.item(1));const y=document.createElement("button"),C=document.createElement("button"),b=document.createElement("button");y.classList.add("editButton","saveEditButton"),C.classList.add("editButton","closeEditButton"),b.classList.add("editButton","deleteEditButton"),y.innerText="Save",C.innerText="Close",b.innerText="Delete",e.appendChild(b),e.appendChild(C),e.appendChild(y),b.addEventListener("click",(()=>{l.removeChild(e),e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),C.addEventListener("click",(()=>{const t=document.createElement("h3"),n=document.createElement("p"),l=document.createElement("p");e.setAttribute("data-priority",E),t.innerText=p,n.innerText=g,n.style.fontStyle="italic",l.innerText=v,e.appendChild(t),e.appendChild(n),e.appendChild(l),e.removeChild(i),e.removeChild(d),e.removeChild(o),e.removeChild(a),e.removeChild(y),e.removeChild(C),e.removeChild(b),u.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")})),y.addEventListener("click",(()=>{const l=document.createElement("h3"),r=document.createElement("p"),c=document.createElement("p");l.innerText=i.value,r.innerText=d.value,r.style.fontStyle="italic",c.innerText=o.value;const s=e.getAttribute("data-index");h[s].title=i.value,h[s].description=d.value,h[s].dueDate=o.value,h[s].priority=a.value,t=a.value,n(),e.setAttribute("data-priority",a.value),console.log(h[s]),console.log("Saved item's priority is: "+h[s].priority),e.appendChild(l),e.appendChild(r),e.appendChild(c),e.removeChild(i),e.removeChild(d),e.removeChild(o),e.removeChild(a),e.removeChild(y),e.removeChild(C),e.removeChild(b),u.disabled=!1,e.setAttribute("data-editing","false"),console.log("Div IS NOT being edited right now.")}))}(e.target)}))}(),c.close()}e.preventDefault()}));const g=document.getElementById("newProject"),v=document.getElementById("projects");g.addEventListener("click",(function(){const e=document.createElement("button"),t=document.createElement("input"),n=document.createElement("button"),i=document.createElement("button");n.innerText="Save",i.innerText="Exit",e.style.padding="3px",n.style.backgroundColor="white",n.style.maxHeight="15px",n.style.maxWidth="15px",n.style.fontSize="1em",n.style.color="navy",n.style.marginTop="5px",i.style.backgroundColor="white",i.style.maxHeight="15px",i.style.maxWidth="15px",i.style.fontSize="1em",i.style.color="navy",i.style.marginTop="5px",e.appendChild(t),e.appendChild(i),e.appendChild(n),n.addEventListener("click",(()=>{let n=t.value;n.length<1?alert("Please Insert Name For Your Project."):(e.innerText=n,n=new Array,console.log(n),e.addEventListener("click",(()=>{o();for(let e=0;e<r.length;e++)r[e].classList.remove("active-project");e.classList.add("active-project")})))})),i.addEventListener("click",(()=>{v.removeChild(e)})),v.removeChild(g),v.appendChild(e),v.appendChild(g),r.push(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,