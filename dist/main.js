(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};let t;function n(e){t=e.target.parentElement.getAttribute("data-priority"),!0===e.target.checked?e.target.parentElement.style.backgroundColor="green":"low"===t?(e.target.parentElement.style.backgroundColor="lightblue",console.log("Priority is LOW")):"normal"==t?(e.target.parentElement.style.backgroundColor="rgb(51, 126, 245)",console.log("Priority is NORMAL")):(e.target.parentElement.style.backgroundColor="red",console.log("Priority is HIGH"))}e.d({},{q7:()=>a,r3:()=>r,$y:()=>c});const o=document.getElementById("content");let l;const r=document.getElementsByTagName("dialog")[0],i=document.getElementById("addItem"),d=document.getElementById("closeDialog");i.addEventListener("click",(()=>{r.showModal()})),d.addEventListener("click",(()=>{r.close()}));class a{constructor(e,t,n,o){this.title=e,this.description=t,this.dueDate=n,this.priority=o}}let c=[];document.getElementById("createTodoItem").addEventListener("click",(function(e){const i=document.getElementById("title").value,d=document.getElementById("description").value,s=document.getElementById("dueDate").value;if(t=document.getElementById("priority").value,i.length<1)alert("Please Insert a Title.");else if(d.length<1)alert("Please Insert a Description.");else if(""===s)alert("Please Choose Your Due Date.");else{const e=new a(i,d,s,t);console.log(e),c.push(e),console.log(c),function(){l=document.createElement("div");const e=document.createElement("input");e.type="checkbox",e.classList.add("checkbox");const r=document.createElement("div"),i=document.createElement("div"),d=document.createElement("div");r.innerHTML="<h3>"+c[c.length-1].title+"</h3>",i.innerHTML="<p>"+c[c.length-1].description+"</p>",d.innerHTML="<p>"+c[c.length-1].dueDate+"</p>",l.style.backgroundColor="low"===t?"lightblue":"normal"==t?"rgb(51, 126, 245)":"red",l.setAttribute("data-priority",t),l.appendChild(e),l.appendChild(r),l.appendChild(i),l.appendChild(d),l.classList.add("showItemDiv"),i.classList.add("showDescription"),o.appendChild(l),e.addEventListener("click",n)}()}e.preventDefault(),r.close()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,